- platform: template
  sensors:
    octoprint_time_elapsed_format:
      friendly_name: 'Printing Time Elapsed'
      value_template: >-
        {% set etime = states.sensor.octoprint_time_elapsed.state | int %}
        {% set seconds = etime % 60 %}
        {% set minutes = ((etime % 3600) / 60) | int %}
        {% set hours = ((etime % 86400) / 3600) | int %}
        {% set days = (etime / 86400) | int %}
        {%- if days > 0 -%}
          {%- if days == 1 -%}
            1 day
          {%- else -%}
            {{ days }} days
          {%- endif -%}
          {{ ', ' }}
        {%- endif -%}
        {%- if hours > 0 -%}
          {%- if hours == 1 -%}
            1 hour
          {%- else -%}
            {{ hours }} hours
          {%- endif -%}
          {{ ', ' }}
        {%- endif -%}
        {%- if minutes > 0 -%}
          {%- if minutes == 1 -%}
            1 minute
          {%- else -%}
            {{ minutes }} minutes
          {%- endif -%}
        {%- endif -%}
    octoprint_time_remaining_format:
      friendly_name: 'Printing Time Remaining'
      value_template: >-
        {% set rtime = states.sensor.octoprint_time_remaining.state | int %}
        {% set seconds = rtime % 60 %}
        {% set minutes = ((rtime % 3600) / 60) | int %}
        {% set hours = ((rtime % 86400) / 3600) | int %}
        {% set days = (rtime / 86400) | int %}
        {%- if days > 0 -%}
          {%- if days == 1 -%}
            1 day
          {%- else -%}
            {{ days }} days
          {%- endif -%}
          {{ ', ' }}
        {%- endif -%}
        {%- if hours > 0 -%}
          {%- if hours == 1 -%}
            1 hour
          {%- else -%}
            {{ hours }} hours
          {%- endif -%}
          {{ ', ' }}
        {%- endif -%}
        {%- if minutes > 0 -%}
          {%- if minutes == 1 -%}
            1 minute
          {%- else -%}
            {{ minutes }} minutes
          {%- endif -%}
        {%- endif -%}

#      recent_arrival_pim:
#        friendly_name: "Recent Arrival: Pim"
#        value_template: >-
#          {{ states('device_tracker.pim2') }}
#      recent_arrival_user2:
#        friendly_name: "Recent Arrival: user2"
#        value_template: >-
#          {{ states('sensor.time') and is_state("device_tracker.rachels_iphone", "home") and as_timestamp(now()) - as_timestamp(states.device_tracker.rachels_iphone.last_changed | default(0)) | int <= 60 * (states.input_number.consider_recent_arrival_mins.state | int) }}
