- alias: Falcon Animation Speed
  initial_state: true
  hide_entity: false
  trigger:
  - platform: state
    entity_id: input_slider.falcon_animation_speed
  action:
  - service: mqtt.publish
    data_template:
      topic: light/falcon/set
      payload: '{"transition":{{ trigger.to_state.state | int }}}'
  id: ea5948cf7c4e44c0a5399d18f84421cf
- id: '1519381563349'
  alias: Doorbell(Nighttime)
  trigger:
  - entity_id: binary_sensor.door_window_sensor_158d0002254184
    from: 'on'
    platform: state
    to: 'off'
  condition:
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  action:
  - data:
      gw_mac: 78:11:DC:B2:77:10
      ringtone_id: '10'
    service: xiaomi_aqara.play_ringtone
  - data:
      message: Er staat iemand voor de deur
      title: Deurbel
    service: notify.ios_iphone_pim
  - data:
      message: Er staat iemand voor de deur
      title: Deurbel
    service: notify.pushbullet_2
  - data:
      entity_id: media_player.googlehome0631
      media_content_id: http://www.orangefreesounds.com/wp-content/uploads/2017/07/Ding-dong-chime.mp3
      media_content_type: music
    service: media_player.play_media
- id: '1519385245869'
  alias: Doorbell(Daytime)
  trigger:
  - entity_id: binary_sensor.door_window_sensor_158d0002254184
    from: 'on'
    platform: state
    to: 'off'
  condition:
  - condition: state
    entity_id: sun.sun
    state: above_horizon
  action:
  - data:
      message: Er staat iemand voor de deur
      title: Deurbel
    service: notify.ios_iphone_pim
- id: '1519398438205'
  alias: Old speaker lower volume
  trigger:
  - event_data:
      click_type: single
      event_id: binary_sensor.switch_158d000210ec53
    event_type: click
    platform: event
  condition: []
  action:
  - data:
      entity_id: media_player.old_speaker
    service: media_player.volume_down
- action:
  - data:
      entity_id: media_player.old_speaker
    service: media_player.volume_up
  alias: Old speaker Higher volume
  condition: []
  id: '1519747883360'
  trigger:
  - event_data:
      click_type: double
      event_id: binary_sensor.switch_158d000210ec53
    event_type: click
    platform: event
- id: '1519760782392'
  alias: Motion hallway (on)
  trigger:
  - entity_id: binary_sensor.motion_sensor_158d0001a92381
    from: 'off'
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  - condition: state
    entity_id: input_boolean.bedtime
    state: 'off'
  action:
  - data:
      entity_id: group.hallway
    service: light.turn_on
- id: '1519760817306'
  alias: Motion hallway (off)
  trigger:
  - entity_id: binary_sensor.motion_sensor_158d0001a92381
    from: 'on'
    platform: state
    to: 'off'
  condition:
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  action:
  - data:
      entity_id: group.hallway
    service: light.turn_off
- id: '1520200724100'
  alias: Motion hallway morning (on)
  trigger:
  - entity_id: binary_sensor.motion_sensor_158d0001e56350
    from: 'off'
    platform: state
    to: 'on'
  condition:
  - after: '6:00'
    before: '8:30'
    condition: time
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  action:
  - data:
      entity_id: group.livingroom
    service: light.turn_on
- action:
  - data:
      entity_id: light.frondoor
    service: light.turn_on
  alias: Frontdoor
  condition: []
  trigger:
  - entity_id: sun.sun
    from: above_horizon
    platform: state
    to: below_horizon
  id: '15202007345100'
- action:
  - data:
      entity_id: light.sonoff_basement
    service: light.turn_on
  alias: Basement light on
  condition: []
  id: '1520251495193'
  trigger:
  - entity_id: binary_sensor.door_window_sensor_158d0002254443
    from: 'off'
    platform: state
    to: 'on'
- action:
  - data:
      entity_id: light.sonoff_basement
    service: light.turn_off
  alias: Basement light off
  condition: []
  id: '1520251539017'
  trigger:
  - entity_id: binary_sensor.door_window_sensor_158d0002254443
    from: 'on'
    platform: state
    to: 'off'
- id: '1528109786675'
  alias: Motion kitchen (on)
  trigger:
  - entity_id: binary_sensor.motion_sensor_158d0001e55662
    from: 'off'
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  - condition: state
    entity_id: input_boolean.bedtime
    state: 'off'
  action:
  - data:
      entity_id: group.kitchenspots
    service: light.turn_on
- id: '1528109853713'
  alias: Motion kitchen (off)
  trigger:
  - entity_id: binary_sensor.motion_sensor_158d0001e55662
    from: 'on'
    platform: state
    to: 'off'
  condition:
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  action:
  - data:
      entity_id: group.kitchenspots
    service: light.turn_off
- id: '1528823416468'
  alias: Motion upstairs (on)
  trigger:
  - entity_id: binary_sensor.motion_sensor_158d0001e56350
    from: 'off'
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  - condition: state
    entity_id: input_boolean.bedtime
    state: 'off'
  action:
  - data:
      entity_id: group.upstairs_spots
    service: light.turn_on
- id: '1528823457733'
  alias: Motion upstairs (off)
  trigger:
  - entity_id: binary_sensor.motion_sensor_158d0001e56350
    from: 'on'
    platform: state
    to: 'off'
  condition:
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  action:
  - data:
      entity_id: group.upstairs_spots
    service: light.turn_off
- action:
  - data:
      entity_id: group.bathroom_group
    service: light.toggle
  alias: Badkamer linkerknop
  condition: []
  id: '1529253871562'
  trigger:
  - event_data:
      entity_id: binary_sensor.wall_switch_left_158d0001e06eb2
      event_type: single
    event_type: xiaomi_aqara.click
    platform: event
- id: '1542658779581'
  alias: Upstairs Xiaomi
  trigger:
  - entity_id: binary_sensor.motion_sensor_158d0001e56350
    from: 'off'
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: input_boolean.bedtime
    state: 'on'
  action:
  - data:
      brightness: '120'
      color_name: red
      entity_id: light.gateway_light_7811dcb27710
    service: light.turn_on
- id: '1542658864921'
  alias: Upstairs Xiaomi off
  trigger:
  - entity_id: binary_sensor.motion_sensor_158d0001e56350
    from: 'on'
    platform: state
    to: 'off'
  condition: []
  action:
  - data:
      entity_id: light.gateway_light_7811dcb27710
    service: light.turn_off
- id: '1544304881668'
  alias: Cover button left(downstairs)
  trigger:
  - event_data:
      entity_id: binary_sensor.wall_switch_left_158d0001e0a3f6
      event_type: single
    event_type: xiaomi_aqara.click
    platform: event
  condition: []
  action:
  - alias: ''
    data:
      entity_id: cover.livingroom_roller
    service: cover.close_cover
- id: '1544305094328'
  alias: Rolluiken omhoog
  trigger:
  - at: 07:00
    platform: time
  condition: []
  action:
  - data:
      entity_id: group.all_covers
    service: cover.open_cover
- id: '1546196514195'
  alias: Octoprint-led
  trigger:
  - entity_id: binary_sensor.octoprint_printing
    from: 'off'
    platform: state
    to: 'on'
  condition: []
  action:
  - data:
      entity_id: light.kossel_light
    service: light.turn_on
- id: '1546196538451'
  alias: octo-print-off
  trigger:
  - entity_id: binary_sensor.octoprint_printing
    from: 'on'
    platform: state
    to: 'off'
  condition: []
  action:
  - data:
      entity_id: light.kossel_light
    service: light.turn_off
- id: '1546896384028'
  alias: Cover button right(downstairs)
  trigger:
  - event_data:
      entity_id: binary_sensor.wall_switch_right_158d0001e0a3f6
      event_type: single
    event_type: xiaomi_aqara.click
    platform: event
  condition: []
  action:
  - data:
      entity_id: cover.livingroom_roller
    service: cover.open_cover
- id: '1546896429811'
  alias: Cover button both(downstairs)
  trigger:
  - event_data:
      entity_id: binary_sensor.wall_switch_both_158d0001e0a3f6
      event_type: single
    event_type: xiaomi_aqara.click
    platform: event
  condition: []
  action:
  - data:
      entity_id: cover.livingroom_roller
    service: cover.stop_cover
- id: '1547412893560'
  alias: Bathroom right-button
  trigger:
  - event_data:
      entity_id: binary_sensor.wall_switch_right_158d0001e06eb2
      event_type: single
    event_type: xiaomi_aqara.click
    platform: event
  condition: []
  action:
  - data:
      brightness: '30'
      entity_id: light.bathroom2
    service: light.turn_on
  - data:
      brightness: '30'
      entity_id: light.bathroom3
    service: light.turn_on
- id: '1547413011732'
  alias: Bathroom button both
  trigger:
  - event_data:
      entity_id: binary_sensor.wall_switch_both_158d0001e06eb2
      event_type: single
    event_type: xiaomi_aqara.click
    platform: event
  condition: []
  action:
  - data:
      entity_id: group.bathroom_group
    service: light.turn_off
- id: '1548364073868'
  alias: Cover office left
  trigger:
  - event_data:
      entity_id: binary_sensor.wall_switch_left_158d000312d1f1
      event_type: single
    event_type: xiaomi_aqara.click
    platform: event
  condition: []
  action:
  - data:
      entity_id: cover.office_roller
    service: cover.close_cover
- id: '1548364189711'
  alias: Cover office right
  trigger:
  - event_data:
      entity_id: binary_sensor.wall_switch_right_158d000312d1f1
      event_type: single
    event_type: xiaomi_aqara.click
    platform: event
  condition: []
  action:
  - data:
      entity_id: cover.office_roller
    service: cover.open_cover
- id: '1548364252800'
  alias: Cover office both
  trigger:
  - event_data:
      entity_id: binary_sensor.wall_switch_both_158d000312d1f1
      event_type: single
    event_type: xiaomi_aqara.click
    platform: event
  condition: []
  action:
  - data:
      entity_id: cover.office_roller
    service: cover.stop_cover
- id: '1550564308364'
  alias: Telegram bot that reply pong to ping
  trigger:
  - event_data:
      text: ping
    event_type: telegram_text
    platform: event
  - event_data:
      text: Ping
    event_type: telegram_text
    platform: event
  condition: []
  action:
  - data:
      message: pong
    service: telegram_bot.send_message
- id: '1550565595309'
  alias: Telegram bot status
  trigger:
  - event_data:
      text: status
    event_type: telegram_text
    platform: event
  - event_data:
      text: Status
    event_type: telegram_text
    platform: event
  condition: []
  action:
  - data: 
      message: '
        The current weather is {{ states ("weather.dark_sky") }}, with a temperature
        of {{ state_attr ("weather.dark_sky", "temperature" )| int }} degrees.

        The current livingroom temperature is {{ state_attr ("climate.woonkamer",
        "current_temperature" )|int }} degrees.

        The solar panels produced {{ states ("sensor.energy_today").split(".").0 }}
        Kilowatthours today.

        {% if is_state ("binary_sensor.door_window_sensor_158d0002133b59", "on") %}
        Reminder, The bedroom window is open. {% endif %}

        {% if state_attr ("vacuum.miep", "clean_stop").strftime("%d") == now().strftime("%d")
        %} Vacuum finished today at {{ state_attr ("vacuum.miep", "clean_stop").strftime("%H:%M")}}.
        {% else %} Vacuum did not clean, last run was {{state_attr ("vacuum.miep",
        "clean_stop").strftime("%A, %d %B")}}. {% endif %}

        {% if state_attr ("vacuum.miep", "sensor_dirty_left") < 2 %} The vacuum sensors
        need to be cleaned in {{state_attr ("vacuum.miep", "sensor_dirty_left")}}
        hours. {% endif %} {% if state_attr ("vacuum.miep", "filter_left") < 2 %}
        The vacuum sensors need to be cleaned in {{state_attr ("vacuum.miep", "filter_left")}}
        hours. {% endif %} {% if state_attr ("vacuum.miep", "side_brush_left") < 2
        %} The vacuum sensors need to be cleaned in {{state_attr ("vacuum.miep", "side_brush_left")}}
        hours. {% endif %} {% if state_attr ("vacuum.miep", "main_brush_left") < 2
        %} The vacuum sensors need to be cleaned in {{state_attr ("vacuum.miep", "main_brush_left")}}
        hours. {% endif %} ' 
    service: telegram_bot.send_message
- id: '1550695640677'
  alias: Telegram cleaning
  trigger:
  - entity_id: vacuum.miep
    from: docked
    platform: state
    to: cleaning
  condition: []
  action:
  - data:
      message: Cleaning, beep boop
    service: telegram_bot.send_message
- id: '1550695784339'
  alias: Telegram docking
  trigger:
  - entity_id: vacuum.miep
    platform: state
    to: Docked
  condition: []
  action:
  - data:
      message: Getting juiced up!
    service: telegram_bot.send_message
- id: '1550697141393'
  alias: Motion office(on)
  trigger:
  - entity_id: binary_sensor.motion_sensor_158d0001e52649
    from: 'off'
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  action:
  - data:
      brightness: '120'
      entity_id: group.office_lights
    service: light.turn_on
- id: '1550697179004'
  alias: Motion office (off)
  trigger:
  - entity_id: binary_sensor.motion_sensor_158d0001e52649
    from: 'on'
    platform: state
    to: 'off'
  condition: []
  action:
  - data:
      entity_id: group.office_lights
    service: light.turn_off
- id: '1550697682701'
  alias: Motion office (on, cover)
  trigger:
  - entity_id: binary_sensor.motion_sensor_158d0001e52649
    from: 'off'
    platform: state
    to: 'on'
  condition:
  - condition: state
    entity_id: cover.office_roller
    state: closed
  action:
  - data:
      brightness: '120'
      entity_id: group.office_lights
    service: light.turn_on
- id: '1550872980640'
  alias: Reset bedtime
  trigger:
  - at: 05:00
    platform: time
  condition: []
  action:
  - data:
      entity_id: input_boolean.bedtime
    service: input_boolean.turn_off
- id: '1553538719582'
  alias: Switch to dark theme
  trigger:
  - entity_id: sun.sun
    from: above_horizon
    platform: state
    to: below_horizon
  condition: []
  action:
  - data:
      name: dark
    service: frontend.set_theme
- id: '1553538754094'
  alias: Set dark theme
  trigger:
  - entity_id: sun.sun
    from: below_horizon
    platform: state
    to: above_horizon
  condition: []
  action:
  - data:
      name: clear
    service: frontend.set_theme
- id: '1553543612290'
  alias: Tesla home lights
  trigger:
  - entity_id: device_tracker.tesla_model_s_5yjsa7e28gf140866_location_tracker
    from: not_home
    platform: state
    to: home
  condition:
  - condition: state
    entity_id: sun.sun
    state: below_horizon
  action:
  - data:
      entity_id: group.livingroom_group
    service: light.turn_on
  - data:
      entity_id: group.livingroom_group
    service: switch.turn_on
- id: '1554283978472'
  alias: Printing done
  trigger:
  - entity_id: binary_sensor.octoprint_printing
    from: 'on'
    platform: state
    to: 'off'
  condition: []
  action:
  - data:
      entity_id: camera.ffmpeg
      filename: /config/www/tmpimage/printer.jpg
    service: camera.snapshot
  - data:
      message: Printing done
    service: telegram_bot.send_message
  - data:
      file: /config/www/tmpimage/printer.jpg
    service: telegram_bot.send_photo
- id: '1554284164549'
  alias: Telegram print status
  trigger:
  - event_data:
      text: Print status
    event_type: telegram_text
    platform: event
  - event_data:
      text: Printer status
    event_type: telegram_text
    platform: event
  condition: []
  action:
  - data:
      entity_id: camera.ffmpeg
      filename: /config/www/tmpimage/printer_status.jpg
    service: camera.snapshot
  - data:
      message: Job is at {{ states('sensor.octoprint_job_percentage') }}%
    service: telegram_bot.send_message
  - data:
      message: 'expected time remaining is: {{states(''sensor.octoprint_time_remaining_format'')
        }}'
    service: telegram_bot.send_message
  - data:
      message: 'And here''s a picture of the printbed:'
    service: telegram_bot.send_message
  - data:
      file: /config/www/tmpimage/printer_status.jpg
    service: telegram_bot.send_photo
- id: '1554312554261'
  alias: Telegram Alarm
  trigger:
  - event_data:
      text: alarm on
    event_type: telegram_text
    platform: event
  - event_data:
      text: Alarm on
    event_type: telegram_text
    platform: event
  condition: []
  action:
  - data:
      entity_id: input_boolean.alarm
    service: input_boolean.turn_on
  - data:
      message: Alarm is set
    service: telegram_bot.send_message
- id: '1554544852706'
  alias: Tensorflow voordeur
  trigger:
  - event_data: {}
    event_type: voordeur_motion
    platform: event
  condition: []
  action:
  - data:
      entity_id: image_processing.tensorflow_voordeur
    service: image_processing.scan
  - data:
      duration: 5
      entity_id: camera.voordeur_streaming
      filename: /config/video/voordeur_video.mp4
      lookback: 5
    service: camera.record
- id: '1554564859672'
  alias: TensorFlow zijdeur
  trigger:
  - event_data: {}
    event_type: zijdeur_motion
    platform: event
  condition: []
  action:
  - data:
      entity_id: image_processing.tensorflow_zijdeur
    service: image_processing.scan
  - data:
      duration: 5
      entity_id: camera.zijdeur_streaming
      filename: /config/video/zijdeur_video.mp4
      lookback: 5
    service: camera.record
- id: '1554790197597'
  alias: Tensorflow notification voordeur
  trigger:
  - above: '0'
    below: '20'
    entity_id: image_processing.tensorflow_voordeur
    platform: numeric_state
  condition: []
  action:
  - data:
      message: '{{ state_attr(''image_processing.tensorflow_voordeur'',''matches'').keys()|list|unique|list|join|title
        }} detected on voordeur camera'
    service: telegram_bot.send_message
  - data:
      file: /config/video/voordeur_latest.jpg
    service: telegram_bot.send_photo
- id: '1554790271700'
  alias: Tensorflow notification zijdeur
  trigger:
  - above: '0'
    entity_id: image_processing.tensorflow_zijdeur
    platform: numeric_state
  condition: []
  action:
  - data:
      message: '{{ state_attr(''image_processing.tensorflow_zijdeur'',''matches'').keys()|list|unique|list|join|title
        }} detected on zijdeur camera'
    service: telegram_bot.send_message
  - data:
      file: /config/video/zijdeur_latest.jpg
    service: telegram_bot.send_photo
- id: '1557406766787'
  alias: Alarm on
  trigger:
  - entity_id: binary_sensor.sleutels_pim_3
    from: Home
    platform: state
    to: Away
  condition: []
  action:
  - data:
      message: 'Alarm is set:'
    service: telegram_bot.send_message
- id: '1558271669699'
  alias: Welcome home Pim
  trigger:
  - entity_id: binary_sensor.sleutels_pim_3
    from: 'off'
    platform: state
    to: 'on'
  condition: []
  action:
  - data_template:
      entity_id: media_player.livingroom
      message: ' {% if now().strftime("%H")|int < 12 %} Good morning, {% elif now().strftime("%H")|int
        < 18 %} Good afternoon, {% else %} Good evening, {% endif %}

        The current weather is {{ states ("weather.dark_sky") }}, with a temperature
        of {{ state_attr ("weather.dark_sky", "temperature" )| int }} degrees.

        The current livingroom temperature is {{ state_attr ("climate.woonkamer",
        "current_temperature" )|int }} degrees.

        The solar panels produced {{ states ("sensor.energy_today").split(".").0 }}
        Kilowatthours today.

        {% if is_state ("binary_sensor.door_window_sensor_158d0002133b59", "on") %}
        Reminder, The bedroom window is open. {% endif %}

        {% if state_attr ("vacuum.miep", "clean_stop").strftime("%d") == now().strftime("%d")
        %} Vacuum finished today at {{ state_attr ("vacuum.miep", "clean_stop").strftime("%H:%M")}}.
        {% else %} Vacuum did not clean, last run was {{state_attr ("vacuum.miep",
        "clean_stop").strftime("%A, %d %B")}}. {% endif %}

        {% if state_attr ("vacuum.miep", "sensor_dirty_left") < 2 %} The vacuum sensors
        need to be cleaned in {{state_attr ("vacuum.miep", "sensor_dirty_left")}}
        hours. {% endif %} {% if state_attr ("vacuum.miep", "filter_left") < 2 %}
        The vacuum sensors need to be cleaned in {{state_attr ("vacuum.miep", "filter_left")}}
        hours. {% endif %} {% if state_attr ("vacuum.miep", "side_brush_left") < 2
        %} The vacuum sensors need to be cleaned in {{state_attr ("vacuum.miep", "side_brush_left")}}
        hours. {% endif %} {% if state_attr ("vacuum.miep", "main_brush_left") < 2
        %} The vacuum sensors need to be cleaned in {{state_attr ("vacuum.miep", "main_brush_left")}}
        hours. {% endif %} '
    service: tts.google_say
- id: '1558274783849'
  alias: IFTT
  trigger:
  - event_data:
      action: call_service
    event_type: ifttt_webhook_received
    platform: event
  condition: []
  action:
    service_template: '{{ trigger.event.data.service }}'
    data_template:
      entity_id: '{{ trigger.event.data.entity_id }}'
- id: '1558275473307'
  alias: Washing Machine
  trigger:
  - platform: webhook
    webhook_id: washing-machine
  condition: []
  action:
  - data:
      message: Hello webhook
    service: telegram_bot.send_message
- id: '1558359147797'
  alias: Good morning
  trigger:
  - entity_id: light.bathroom1
    from: 'off'
    platform: state
    to: 'on'
  condition:
  - after: '5:00'
    before: '12:00'
    condition: time
  action:
  - data:
      entity_id: media_player.googlehome7582
      volume_level: '0.2'
    service: media_player.volume_set
  - service: tts.google_say
    data_template:
      entity_id: media_player.bedroom_speaker
      message: ' {% if now().strftime("%H")|int < 12 %} Good morning, {% elif now().strftime("%H")|int
        < 18 %} Good afternoon, {% else %} Good evening, {% endif %}

        The current weather is {{ states ("weather.dark_sky") }} with a temperature
        of {{ state_attr ("weather.dark_sky", "temperature" )| int }} degrees.

        {% if is_state ("calendar.containers", "on") %} {{ state_attr ("calendar.containers",
        "message") }}. {% endif %} {% if is_state ("binary_sensor.door_window_sensor_158d0002133b59",
        "on") %} The bedroom window is still open. {% endif %}

        '
